{"version":3,"sources":["webpack://match-game/./js/modules/aboutGame.js","webpack://match-game/./js/modules/bestScore.js","webpack://match-game/./js/modules/classes.js","webpack://match-game/./js/modules/indexDB.js","webpack://match-game/./js/modules/menu.js","webpack://match-game/./js/modules/modal.js","webpack://match-game/./js/modules/settings.js","webpack://match-game/webpack/bootstrap","webpack://match-game/webpack/runtime/define property getters","webpack://match-game/webpack/runtime/hasOwnProperty shorthand","webpack://match-game/webpack/runtime/make namespace object","webpack://match-game/./js/script.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAuC;;AAEvC;;AAEA;;AAEA;AACA,IAAI,sDAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;ACxCuC;AACU;;AAEjD;;AAEA;;AAEA;AACA,IAAI,sDAAW;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,gEAAsB;AAC1B;;;;;;;;;;;;;;;;;;;;;;ACpBuC;AACA;AACK;AACJ;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,sDAAe;AACvB,QAAQ,sDAAW;AACnB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,qDAAqD,cAAc;AACnE,0DAA0D,cAAc;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,MAAM;AACxD;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gFAAgF,aAAa;AAC7F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAe;AAC/B;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAa;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2B;AACA,K;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qBAAqB,GAAG,sBAAsB;AAC5E;;AAEA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA,6CAA6C,8BAA8B;AAC3E,yCAAyC,WAAW;AACpD;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,YAAY;AACjE,wEAAwE,WAAW,EAAE;AACrF,uEAAuE,UAAU,EAAE;AACnF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxS+B;;AAE/B;AACA;AACA;AACA;AACA;AACA,2CAA2C,mBAAmB;AAC9D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,eAAe;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,6BAA6B,0CAAI;AACjC;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3E4C;AACA;AACF;AACN;AACF;;AAElC;AACA;AACA,iCAAiC,iCAAiC;AAClE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,oDAAc;AAC1B,YAAY,oDAAc;AAC1B;AACA,0BAA0B,0DAAoB;AAC9C,YAAY,oEAA8B;AAC1C;AACA,KAAK;;AAEL;AACA;AACA,+BAA+B,2DAAe;AAC9C;AACA,+BAA+B,2DAAe;AAC9C;AACA,6BAA6B,yDAAc;AAC3C;AACA;AACA;;AAEA;AACA;AACA,QAAQ,mDAAW;AACnB,KAAK;AACL;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;ACnFoB;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,qDAAqD,mBAAmB;;;AAGxE;;AAEA;;AAEA;AACA,gDAAgD;;AAEhD,yBAAyB,0CAAI;;AAE7B,QAAQ,kDAAY;AACpB,QAAQ,yDAAmB;;AAE3B;;AAEA;AACA;;AAEA,QAAQ,oEAA8B;AACtC,QAAQ,4DAAsB;AAC9B;;AAEA;;AAEA;AACA,mCAAmC,oDAAc;AACjD;AACA;AACA,gBAAgB,oDAAc;AAC9B,gBAAgB,sDAAgB;AAChC;AACA;AACA,SAAS;AACT,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gGAAgG,KAAK;AACrG;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5JkC;;AAElC;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,sDAAgB;AACxB,KAAK;;AAEL;AACA;AACA,QAAQ,wDAAkB;AAC1B,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwB;;;;;;;UCzDxB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;ACNa;;AAEuC;AAClB;;AAElC;;AAEA,IAAI,sDAAI;AACR,IAAI,mEAAe;;AAEnB,CAAC,E","file":"bundle.js","sourcesContent":["import {delSettings} from './settings';\r\n\r\nconst main = document.querySelector('main');\r\n\r\n// about Game\r\n\r\nfunction renderAboutGame() {\r\n    delSettings();\r\n    const aboutGame = document.createElement('div');\r\n    aboutGame.classList.add('about_game');\r\n    aboutGame.innerHTML = \r\n        `<h1 class=\"title\">How to play?</h1>\r\n        <div class=\"content\">\r\n            <div class=\"content__row\">\r\n                <div class=\"content__item\">\r\n                    <p class=\"content__item_number\">1</p>\r\n                    <p class=\"content__item_description\">Register new player in game</p>\r\n                </div>\r\n                <img src=\"assets/image/about_game/image-1.jpg\" alt=\"image\">\r\n            </div>\r\n            <div class=\"content__row\">\r\n                <div class=\"content__item\">\r\n                    <p class=\"content__item_number\">2</p>\r\n                    <p class=\"content__item_description\">Configure your game settings</p>\r\n                </div>\r\n                <img src=\"assets/image/about_game/image-2.jpg\" alt=\"image\">\r\n            </div>\r\n            <div class=\"content__row\">\r\n                <div class=\"content__item\">\r\n                    <p class=\"content__item_number\">3</p>\r\n                    <p class=\"content__item_description\">Start you new game! Remember card positions \r\n                    and match it before times up.</p>\r\n                </div>\r\n                <img src=\"assets/image/about_game/image-3.jpg\" alt=\"image\">\r\n            </div>\r\n        </div>`;\r\n        \r\n        main.append(aboutGame);\r\n}\r\n\r\n// renderAboutGame();\r\n\r\n\r\nexport {renderAboutGame};","import {delSettings} from './settings';\r\nimport {createUsersInBestScore} from './indexDB';\r\n\r\nconst main = document.querySelector('main');\r\n\r\n// Best score\r\n\r\nfunction renderBestScore() {\r\n    delSettings();\r\n    const bestScore = document.createElement('div');\r\n    bestScore.classList.add('best_score');\r\n    main.innerHTML = '';\r\n    bestScore.innerHTML = `\r\n        <h1 class=\"title\">Best players</h1>\r\n        <div class=\"users_list\">\r\n\r\n        </div>\r\n    `;\r\n    main.append(bestScore);\r\n    createUsersInBestScore(bestScore.querySelector('.users_list'));\r\n}\r\n\r\nexport {renderBestScore};","import {delSettings} from './settings';\r\nimport {removeNavActive} from './menu';\r\nimport {renderBestScore} from './bestScore';\r\nimport {checkUserInDB} from './indexDB';\r\n\r\nconst main = document.querySelector('main');\r\n\r\nclass Game {\r\n    constructor() {\r\n        this.cardsType = 1;\r\n        this.difficulty = 12;\r\n        this.status = 'stopped';\r\n        this.user = false;\r\n        this.prevCard = false;\r\n        this.curCard = false;\r\n        this.step = 0;\r\n        this.rightStep = 0;\r\n        this.EndTime = 0;\r\n        this.timeInterval = false;\r\n        this.time = 0;\r\n        this.cardBack = 1;\r\n    }\r\n\r\n    render() {\r\n        this.updateGema();\r\n        this.status = 'run';\r\n        removeNavActive();\r\n        delSettings();\r\n        this.tougleBtnStartStopGame();\r\n\r\n        const cardsField = this.createCardsField();\r\n        this.createCards(cardsField, this.difficulty);\r\n        main.innerHTML = '';\r\n        this.runTimer();\r\n        main.append(cardsField);\r\n\r\n        const cards = document.querySelectorAll('.card');\r\n\r\n        setTimeout(() => {\r\n            cards.forEach(card => card.classList.remove('flipped'));\r\n        }, 4000);\r\n\r\n        cardsField.addEventListener('click', e => {\r\n            if (e.target.classList.contains('card__back')) {\r\n                this.flipCard(e.target.parentElement);\r\n                e.target.parentElement.classList.remove('card__hover');\r\n            }\r\n        });\r\n\r\n        cardsField.addEventListener('mouseover', e => {\r\n            if (e.target.classList.contains('card__back')) {\r\n                e.target.parentElement.classList.add('card__hover');\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    updateGema() {\r\n        this.prevCard = false;\r\n        this.curCard = false;\r\n        this.step = 0;\r\n        this.rightStep = 0;\r\n        this.EndTime = 0;\r\n        this.time = 0;\r\n        this.cardBack = 1;\r\n    }\r\n\r\n    createCardsField() {\r\n        const cardsField = document.createElement('div');\r\n        cardsField.classList.add('cards_field');\r\n        if (this.difficulty === 12) {\r\n            cardsField.style.height = '590px';\r\n        } else {\r\n            cardsField.style.height = '790px';\r\n            main.style.height = '950px';\r\n        }\r\n        return cardsField;\r\n    }\r\n\r\n    createCards(cardsField, n) {\r\n        let numFrontBG = getRandomIntArr(1, 9, n/2);\r\n        numFrontBG = mixCards(numFrontBG);\r\n        for (let i = 0; i < n; i++) {\r\n            const front = `assets/image/card/front/${numFrontBG[i]}.jpg`,\r\n                    back = `assets/image/card/back/back-${this.cardBack}.jpg`,\r\n                    number = numFrontBG[i],\r\n                    card = (new Card(front, back, number)).renderCard();\r\n            cardsField.append(card);\r\n        }\r\n    }\r\n\r\n    flipCard(card) {\r\n        let color = 'red';\r\n        this.step++;\r\n        card.classList.add('flipped');\r\n        if (!this.prevCard) {\r\n            this.prevCard = card;\r\n        } else {\r\n            this.curCard = card;\r\n            if (this.prevCard.dataset.number === this.curCard.dataset.number) {\r\n                this.rightStep++;\r\n                color = 'green';\r\n            }\r\n            this.paintCard([this.prevCard, this.curCard], color);\r\n            this.prevCard = false;\r\n        }\r\n        this.checkStatus();\r\n    }\r\n\r\n    paintCard(cards, color) {\r\n        cards.forEach(card => {\r\n            const colorContainer = document.createElement('div');\r\n            colorContainer.classList.add(`card__${color}`);\r\n            card.append(colorContainer);\r\n        });\r\n    }\r\n\r\n    checkStatus() {\r\n        if (this.step === this.difficulty) {\r\n            this.status = 'win';\r\n            this.user.score = this.rightStep * 100 - this.time * 5;\r\n            if (this.user.score < 0) {\r\n                this.user.score = 0;\r\n            }\r\n            setTimeout(() => this.stopGame(), 1000);\r\n        }\r\n    }\r\n\r\n    createFinishMessage() {\r\n        let messege;\r\n        if (this.status === 'win') {\r\n            messege = `Congratulations! You successfully found all matches on ${this.EndTime} seconds.`;\r\n        } else {\r\n            messege = 'You lose';\r\n        }\r\n        const finishMessage = document.createElement('div');\r\n        finishMessage.classList.add('congratulations', 'modal');\r\n        finishMessage.innerHTML = `\r\n            <div class=\"congratulations__inner\">\r\n                <p>${messege}</p>\r\n                <button>OK</button>\r\n            </div>\r\n            `;\r\n            main.append(finishMessage);\r\n            const btnOK = document.querySelector('.congratulations button');\r\n            btnOK.addEventListener('click', () => {\r\n                finishMessage.remove();\r\n                renderBestScore();\r\n                document.querySelector('#best_score').classList.add('active');\r\n            });\r\n    }\r\n\r\n    stopGame() {\r\n        const time = document.querySelector('.timer__inner span');\r\n        let seconds = +time.textContent.split(':')[1],\r\n            minuts = +time.textContent.split(':')[0];\r\n        this.EndTime = seconds + minuts * 60;\r\n        clearInterval(this.timeInterval);\r\n        this.tougleBtnStartStopGame();\r\n        this.createFinishMessage();\r\n        checkUserInDB(newGame.user);\r\n    }\r\n\r\n    // Start Stop button\r\n\r\n    createBtnStarStoptGame() {\r\n        const btnStartGame = document.createElement('button');\r\n        btnStartGame.classList.add('white_btn');\r\n        btnStartGame.textContent = 'start game';\r\n\r\n        document.querySelector('.header__right').append(btnStartGame);\r\n    }\r\n\r\n    tougleBtnStartStopGame() {\r\n        const btnStartStop = document.querySelector('.header__right button');\r\n        switch (btnStartStop.textContent) {\r\n            case 'start game': btnStartStop.textContent = 'stop game';\r\n            break;\r\n            case 'stop game': btnStartStop.textContent = 'start game';\r\n            break;\r\n        } \r\n    }\r\n\r\n    createUserIcon() {\r\n        const userIcon = document.createElement('div');\r\n        userIcon.classList.add('user_icon');\r\n        userIcon.innerHTML = `\r\n            <img src=\"${this.user.avatar}\" alt=\"user\">\r\n        `;\r\n        document.querySelector('.header__right').append(userIcon);\r\n    }\r\n\r\n    // Timer\r\n\r\n    createTimer() {\r\n        const timer = document.createElement('div');\r\n        timer.classList.add('timer');\r\n        timer.innerHTML = `\r\n            <div class=\"timer__inner\">\r\n                <span>00:-1</span>\r\n            </div>\r\n        `;\r\n        main.append(timer);\r\n    }\r\n\r\n    runTimer() {\r\n        this.createTimer();\r\n        this.timeInterval = setInterval(() => this.updateTimer(), 1000);\r\n        this.updateTimer();   \r\n    } \r\n\r\n    updateTimer() {\r\n        const time = document.querySelector('.timer__inner span');\r\n        let seconds = +time.textContent.split(':')[1],\r\n            minuts = +time.textContent.split(':')[0];\r\n        seconds++;\r\n        this.time = seconds + minuts * 60;\r\n        if (seconds > 59) {\r\n            seconds = 0;\r\n            minuts++;\r\n        }\r\n        time.textContent = `${this.getZero(minuts)}:${this.getZero(seconds)}`;\r\n    }\r\n\r\n    getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n}\r\n\r\nconst newGame = new Game();\r\n\r\nfunction mixCards(arr){\r\n    return arr.map(i=>[Math.random(), i]).sort().map(i=>i[1]);\r\n}\r\n\r\nfunction getRandomIntArr(min, max, n) {\r\n    const arr = [];\r\n    while (arr.length < n) {\r\n        const num = Math.floor(Math.random() * (max - min)) + min;\r\n        if (arr.indexOf(num) < 0) {\r\n            arr.push(num);\r\n        }\r\n    }\r\n    return [...arr, ...arr];\r\n}\r\n\r\n\r\nclass User {\r\n    constructor(fname, lname, email) {\r\n        this.fname = fname;\r\n        this.lname = lname;\r\n        this.email = email;\r\n        this.avatar = 'assets/image/icon/avatar.png';\r\n        this.score = 0;\r\n    }\r\n\r\n    render(bestScore) {\r\n        const userDIV = document.createElement('div');\r\n        userDIV.classList.add('user');\r\n        userDIV.innerHTML = `\r\n            <div class=\"avatar_container\">\r\n                <img src=${this.avatar} alt=\"avatar\">\r\n            </div>\r\n            <div class=\"user__information\">\r\n                <p class=\"user__full_name\">${this.fname + ' ' + this.lname}</p>\r\n                <p class=\"user__email\">${this.email}</p>\r\n            </div>\r\n            <p class=\"user__score\">Score: <span>${this.score}</span></p>\r\n        `;\r\n        bestScore.append(userDIV);\r\n    }\r\n}\r\n\r\n\r\nclass Card {\r\n    constructor(front, back, number) {\r\n        this.front = front;\r\n        this.back = back;\r\n        this.number = number;\r\n    }\r\n\r\n    renderCard() {\r\n        const card = document.createElement('div');\r\n        card.classList.add('card_container');\r\n        card.innerHTML = `\r\n            <div class=\"card flipped\" data-number=\"${this.number}\">\r\n                <div class=\"card__front\" style=\"background-image: url(${this.front});\"></div>\r\n                <div class=\"card__back\" style=\"background-image: url(${this.back});\"></div>\r\n            </div>\r\n        `;\r\n        return card;\r\n    }\r\n}\r\n\r\n\r\nexport {newGame, User, Card};","import {User} from './classes';\r\n\r\nlet db;\r\nlet openRequest = window.indexedDB.open('match-game', 1);\r\nopenRequest.onupgradeneeded = function() {\r\n    let thisDB = openRequest.result;\r\n    if (!thisDB.objectStoreNames.contains('users')) {\r\n        thisDB.createObjectStore('users', { keyPath: \"email\" });\r\n    }\r\n};\r\n\r\nopenRequest.onsuccess = function(e) {\r\n    db = e.target.result;\r\n};\r\n\r\nfunction checkUserInDB(user) {\r\n    let transaction = db.transaction(\"users\", \"readwrite\");\r\n    let users = transaction.objectStore(\"users\");\r\n\r\n    let request = users.getAll();\r\n\r\n    request.onsuccess = function() {\r\n        let usersArr = request.result.sort((a, b) =>  b.score - a.score);\r\n        request.result.forEach(obj => {\r\n            if (obj.email === user.email && obj.score < user.score) {\r\n                users.delete(obj.email);\r\n            }\r\n        });\r\n        if (usersArr.length < 10) {\r\n            addUserInDB(users, user);\r\n        } else {\r\n            if (user.score > usersArr[usersArr.length-1].score) {\r\n                users.delete(usersArr[usersArr.length-1].email);\r\n                addUserInDB(users, user);\r\n            }\r\n        }\r\n    };\r\n\r\n    request.onerror = function() {\r\n        console.log(\"Ошибка\", request.error);\r\n    };\r\n}\r\n\r\nfunction addUserInDB(usersStore, user) {\r\n\r\n    let request = usersStore.add(user);\r\n\r\n    request.onsuccess = function() {\r\n        console.log(`${request.result} добавлен в базу данных`);\r\n    };\r\n\r\n    request.onerror = function() {\r\n        console.log(\"Ошибка\", request.error);\r\n    };\r\n}\r\n\r\nfunction createUsersInBestScore(bestScore) {\r\n    let transaction = db.transaction(\"users\", \"readwrite\");\r\n    let users = transaction.objectStore(\"users\");\r\n\r\n    let request = users.getAll();\r\n\r\n    request.onsuccess = function() {\r\n        let usersArr = request.result.sort((a, b) =>  b.score - a.score);\r\n        usersArr.forEach(obj => {\r\n            const user = new User(obj.fname, obj.lname, obj.email);\r\n            user.avatar = obj.avatar;\r\n            user.score = obj.score;\r\n            user.render(bestScore);\r\n        });\r\n    };\r\n\r\n    request.onerror = function() {\r\n        console.log(\"Ошибка\", request.error);\r\n    };\r\n}\r\n\r\nexport {db, checkUserInDB, createUsersInBestScore};","import {renderAboutGame} from './aboutGame';\r\nimport {renderBestScore} from './bestScore';\r\nimport {renderSettings} from './settings';\r\nimport {renderModal} from './modal';\r\nimport {newGame} from './classes';\r\n\r\nfunction removeNavActive() {\r\n    const navItemList = document.querySelectorAll('.nav__item');\r\n    navItemList.forEach(item => {item.classList.remove('active');});\r\n}\r\n\r\nconst main = document.querySelector('main'),\r\n      header = document.querySelector('header');\r\n\r\nfunction menu() {\r\n\r\n    // Header\r\n    \r\n    header.innerHTML = `\r\n        <div class=\"header__icon\">\r\n            <h3>match</h3>\r\n            <h3>match</h3>\r\n        </div>\r\n        <nav>\r\n            <a class=\"nav__item active\" id=\"about_game\" href=\"#\">\r\n                <p class=\"nav__icon\">?</p>\r\n                <h4>About Game</h4>\r\n            </a>\r\n            <a class=\"nav__item\" id=\"best_score\" href=\"#\">\r\n                <img class=\"nav__icon\" src=\"assets/image/icon/stars.png\" alt=\"icon\">\r\n                <h4>Best Score</h4>\r\n            </a>\r\n            <a class=\"nav__item\" id=\"settings\" href=\"#\">\r\n                <img class=\"nav__icon\" src=\"assets/image/icon/settings.png\" alt=\"icon\">\r\n                <h4>Game Settings</h4>\r\n            </a>\r\n        </nav>\r\n        <div class=\"header__right\">\r\n            <button class=\"registration_btn white_btn\">register new player</button>\r\n        </div>\r\n    `;\r\n\r\n    // Menu\r\n\r\n    function switchPage(target) {\r\n        removeNavActive();\r\n            target.classList.add('active');\r\n            main.innerHTML = '';\r\n            renderPage(target.id);\r\n    }\r\n\r\n    const nav = document.querySelector('nav');\r\n    nav.addEventListener('click', e => {\r\n        if (e.target.classList.contains('nav__item')) {\r\n            switchPage(e.target);\r\n        } else if (e.target.parentElement.classList.contains('nav__item')) {\r\n            switchPage(e.target.parentElement);\r\n        }\r\n        if (newGame.status === 'run') {\r\n            newGame.status = 'stopped';\r\n            main.style.height = '800px';\r\n            clearInterval(newGame.timeInterval);\r\n            newGame.tougleBtnStartStopGame();\r\n        }\r\n    });\r\n\r\n    function renderPage(namePage) {\r\n        switch(namePage) {\r\n            case 'about_game': renderAboutGame();\r\n                break;\r\n            case 'best_score': renderBestScore();\r\n                break;\r\n            case 'settings': renderSettings();\r\n                break;\r\n        }\r\n    }\r\n\r\n    const btnRegister = document.querySelector('.registration_btn');\r\n    btnRegister.addEventListener('click', () => {\r\n        renderModal();\r\n    });\r\n}\r\n\r\nexport default menu;\r\nexport {removeNavActive};","import {newGame, User} from './classes';\r\n\r\nconst body = document.querySelector('body');\r\n\r\nfunction renderModal() {\r\n    const modal = document.createElement('div');\r\n    modal.classList.add('modal');\r\n    modal.innerHTML = `\r\n        <div class=\"modal__inner\">\r\n        <div class=\"modal__container\">\r\n            <h1 class=\"title\">Registr new Player</h1>\r\n            <div class=\"modal__content\">\r\n                <form class=\"registration\" action=\"#\">\r\n                    <div class=\"form__item\">\r\n                        <p>First Name</p>\r\n                        <input type=\"text\" name=\"firstName\" placeholder=\"Enter your first name\">\r\n                    </div>\r\n                    <div class=\"form__item\">\r\n                        <p>Last Name</p>\r\n                        <input type=\"text\" name=\"lastName\" placeholder=\"Enter your last name\">\r\n                    </div>\r\n                    <div class=\"form__item\">\r\n                        <p>E-mail</p>\r\n                        <input type=\"email\" name=\"email\" placeholder=\"Enter your email\">\r\n                    </div>\r\n                </form>\r\n                <div class=\"avatar_container\">\r\n                    <input class=\"avatar_input\" id=\"btnInput\" name=\"upload\" type=\"file\"/>\r\n                    <img src=\"assets/image/icon/avatar.png\" alt=\"avatar\" class=\"default_avatar\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modal__button_container\">\r\n                <button class=\"add_user_button\">Add user</button>\r\n                <button class=\"cancel_btn\">cancel</button>\r\n            </div>\r\n        </div>\r\n    `;\r\n\r\n    body.append(modal);\r\n\r\n    document.querySelector('.cancel_btn').addEventListener('click', e => {\r\n        closeModal();\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && document.querySelector('.modal')) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    modal.addEventListener('click', (e) =>{\r\n        if (e.target === modal) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    const avatarContainer = document.querySelector('.avatar_container');\r\n\r\n    avatarContainer.addEventListener('mouseover', e => {\r\n        if (e.target.classList.contains('default_avatar')) {\r\n            e.target.src = 'assets/image/icon/add_avatar.png';\r\n        }\r\n    });\r\n\r\n    avatarContainer.addEventListener('mouseout', e => {\r\n        if (e.target.classList.contains('default_avatar')) {\r\n            e.target.src = 'assets/image/icon/avatar.png';\r\n        }\r\n    });\r\n\r\n    const fileInput = document.querySelector('.avatar_input');\r\n\r\n    fileInput.addEventListener('change', () => {\r\n        avatarContainer.querySelector('img').remove();\r\n        const file = fileInput.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            const img = new Image();\r\n            img.src = reader.result;\r\n            avatarContainer.append(img);\r\n        };\r\n        reader.readAsDataURL(file);\r\n        fileInput.value = '';\r\n    });\r\n\r\n    avatarContainer.addEventListener('click', () => {fileInput.click();});\r\n\r\n\r\n    let firstName, lastName, email;\r\n\r\n    registerUser();\r\n\r\n    document.querySelector('.add_user_button').addEventListener('click', () => {\r\n        if (!firstName || !lastName || !email) { return;}\r\n\r\n        const user = new User(firstName, lastName, email);\r\n\r\n        newGame.user = user;\r\n        newGame.user.avatar = document.querySelector('.avatar_container img').src;\r\n\r\n        closeModal();\r\n\r\n        const btnRegister = document.querySelector('.registration_btn');\r\n        btnRegister.remove();\r\n\r\n        newGame.createBtnStarStoptGame();\r\n        newGame.createUserIcon();\r\n        const btnStarStoptGame = document.querySelector('button');\r\n\r\n        btnStarStoptGame.addEventListener('click', () => {\r\n\r\n            switch (btnStarStoptGame.textContent) {\r\n                case 'start game': newGame.render();\r\n                break;\r\n                case 'stop game': \r\n                newGame.status = 'stopped';\r\n                newGame.stopGame();\r\n                break;\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    // Проверка формы регистрации\r\n\r\n    function getUserValue(input, value) {\r\n        switch(input.attributes.name.value) {\r\n            case 'firstName': firstName = value;\r\n            break;\r\n            case 'lastName': lastName = value;\r\n            break;\r\n            case 'email': email = value;\r\n            break;\r\n        }\r\n    }\r\n\r\n    function registerUser() {\r\n        const inputs = document.querySelectorAll('input');\r\n        inputs.forEach(input => {\r\n            input.addEventListener('input', () => {\r\n                let reg;\r\n                input.attributes.name.value === 'email' ? reg = /.+@.+\\..+/i : reg = /^[a-zа-я]{1,15}$/gi;\r\n                if (input.value.match(reg)) {\r\n                    input.style.border = '2px solid green';\r\n                    getUserValue(input, input.value);\r\n                } else {\r\n                    input.style.border = '2px solid red';\r\n                    getUserValue(input, '');\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nfunction closeModal() {\r\n    document.querySelector('.modal').remove();\r\n}\r\n\r\nexport {renderModal, closeModal};","import {newGame} from './classes';\r\n\r\nconst body = document.querySelector('body'),\r\n      main = document.querySelector('main');\r\n\r\n// Settings\r\n\r\nfunction renderSettings() {\r\n    let settings = document.querySelector('.settings');\r\n    if (settings) {settings.remove();}\r\n    settings = document.createElement('div');\r\n    settings.classList.add('settings');\r\n    settings.innerHTML = `\r\n        <form class=\"settings__form\" action=\"#\">\r\n            <div class=\"settings__item\">\r\n                <h1 class=\"title\">Game cards</h1>\r\n                <select name=\"\" id=\"cards_type\">\r\n                    <option hidden>select game cards type</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <h1 class=\"title\">Difficulty</h1>\r\n                <select name=\"\" id=\"difficulty\">\r\n                    <option value=\"\" hidden>select game type</option>\r\n                    <option value=\"12\">4x3</option>\r\n                    <option value=\"16\">4x4</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    `;\r\n    main.style.display = 'none';\r\n    body.append(settings);\r\n\r\n    const cardsType = document.querySelector('#cards_type');\r\n    cardsType.addEventListener('change', e => {\r\n        newGame.cardBack = e.target.value;\r\n    });\r\n\r\n    const difficulty = document.querySelector('#difficulty');\r\n    difficulty.addEventListener('change', e => {\r\n        newGame.difficulty = +e.target.value;\r\n    });\r\n}\r\n\r\nfunction delSettings() {\r\n    const settings = document.querySelector('.settings');\r\n    if (settings) {\r\n        settings.remove();\r\n        main.style.display = 'block';\r\n    }\r\n}\r\n\r\nexport {renderSettings};\r\nexport {delSettings};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\n\r\nimport {renderAboutGame} from './modules/aboutGame';\r\nimport menu from './modules/menu';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    menu();\r\n    renderAboutGame();\r\n\r\n});"],"sourceRoot":""}